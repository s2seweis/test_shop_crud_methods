{"ast":null,"code":"var _jsxFileName = \"/Users/SWT/Desktop/test_shop_crud_copy/src/components/Signup/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signUpUserStart } from './../../redux/User/user.actions';\nimport './styles.scss';\nimport AuthWrapper from './../AuthWrapper';\nimport FormInput from './../forms/FormInput';\nimport Button from './../forms/Button';\n\nconst mapState = _ref => {\n  let {\n    user\n  } = _ref;\n  return {\n    currentUser: user.currentUser,\n    userErr: user.userErr\n  };\n};\n\nconst Signup = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    currentUser,\n    userErr\n  } = useSelector(mapState);\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors([]);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(signUpUserStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }));\n  };\n\n  const configAuthWrapper = {\n    headline: 'Registration'\n  };\n  return /*#__PURE__*/React.createElement(AuthWrapper, Object.assign({}, configAuthWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, errors.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, errors.map((err, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, err);\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    placeholder: \"Full name\",\n    handleChange: e => setDisplayName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    handleChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    handleChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    placeholder: \"Confirm Password\",\n    handleChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/SWT/Desktop/test_shop_crud_copy/src/components/Signup/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","signUpUserStart","AuthWrapper","FormInput","Button","mapState","user","currentUser","userErr","Signup","props","dispatch","history","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","reset","push","Array","isArray","length","handleFormSubmit","event","preventDefault","configAuthWrapper","headline","map","err","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signUpUserStart } from './../../redux/User/user.actions';\nimport './styles.scss';\n\nimport AuthWrapper from './../AuthWrapper';\nimport FormInput from './../forms/FormInput';\nimport Button from './../forms/Button';\n\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n  userErr: user.userErr\n});\n\nconst Signup = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentUser, userErr } = useSelector(mapState);\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors([]);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(signUpUserStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }));\n  }\n\n  const configAuthWrapper = {\n    headline: 'Registration'\n  };\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <div className=\"formWrap\">\n\n        {errors.length > 0 && (\n          <ul>\n            {errors.map((err, index) => {\n              return (\n                <li key={index}>\n                  {err}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n\n        <form onSubmit={handleFormSubmit}>\n\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            placeholder=\"Full name\"\n            handleChange={e => setDisplayName(e.target.value)}\n          />\n\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            handleChange={e => setEmail(e.target.value)}\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            handleChange={e => setPassword(e.target.value)}\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            placeholder=\"Confirm Password\"\n            handleChange={e => setConfirmPassword(e.target.value)}\n          />\n\n          <Button type=\"submit\">\n            Register\n            </Button>\n        </form>\n      </div>\n    </AuthWrapper>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}