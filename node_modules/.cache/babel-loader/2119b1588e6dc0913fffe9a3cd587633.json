{"ast":null,"code":"var _jsxFileName = \"/Users/SWT/Desktop/test_shop_crud_copy/src/components/OrderHistory/index.js\";\nimport React from 'react';\nimport { TableContainer, Table, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nconst columns = [{\n  id: 'orderCreatedDate',\n  lable: 'Order Date'\n}, {\n  id: 'documentID',\n  lable: 'Order ID'\n}, {\n  id: 'orderTotal',\n  lable: 'Amount'\n}];\nconst styles = {\n  fontSize: '16px',\n  cursor: 'pointer',\n  width: '10%'\n};\n\nconst formatText = (columnName, columnValue) => {\n  switch (columnName) {\n    case 'orderTotal':\n      return `£${columnValue}`;\n\n    case 'orderCreatedDate':\n      return moment(columnValue.nano).format('DD/MM/YYYY');\n\n    default:\n      return columnValue;\n  }\n};\n\nconst OrderHistory = _ref => {\n  let {\n    orders\n  } = _ref;\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, columns.map((column, pos) => {\n    const {\n      lable\n    } = column;\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: pos,\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, lable);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, Array.isArray(orders) && orders.length > 0 && orders.map((row, pos) => {\n    const {\n      documentID\n    } = row;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: pos,\n      onClick: () => history.push(`/order/${documentID}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, columns.map((column, pos) => {\n      const columnName = column.id;\n      const columnValue = row[columnName];\n      const formattedText = formatText(columnName, columnValue);\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: pos,\n        style: styles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, formattedText);\n    }));\n  }))));\n};\n\nexport default OrderHistory;","map":{"version":3,"sources":["/Users/SWT/Desktop/test_shop_crud_copy/src/components/OrderHistory/index.js"],"names":["React","TableContainer","Table","TableHead","TableRow","TableBody","TableCell","moment","useHistory","columns","id","lable","styles","fontSize","cursor","width","formatText","columnName","columnValue","nano","format","OrderHistory","orders","history","map","column","pos","Array","isArray","length","row","documentID","push","formattedText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  TableContainer, Table, TableHead,\n  TableRow, TableBody, TableCell\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nconst columns = [\n  {\n    id: 'orderCreatedDate',\n    lable: 'Order Date'\n  },\n  {\n    id: 'documentID',\n    lable: 'Order ID'\n  },\n  {\n    id: 'orderTotal',\n    lable: 'Amount'\n  }\n];\n\nconst styles = {\n  fontSize: '16px',\n  cursor: 'pointer',\n  width: '10%'\n};\n\nconst formatText = (columnName, columnValue) => {\n  switch (columnName) {\n    case 'orderTotal':\n      return `£${columnValue}`;\n    case 'orderCreatedDate':\n      return moment(columnValue.nano).format('DD/MM/YYYY')\n    default:\n      return columnValue;\n  }\n};\n\nconst OrderHistory = ({ orders }) => {\n  const history = useHistory();\n\n  return (\n    <TableContainer>\n      <Table>\n\n        <TableHead>\n          <TableRow>\n            {columns.map((column, pos) => {\n              const { lable } = column;\n\n              return (\n                <TableCell\n                  key={pos}\n                  style={styles}\n                >\n                  {lable}\n                </TableCell>\n              )\n            })}\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n\n          {(Array.isArray(orders) && orders.length > 0) && orders.map((row, pos) => {\n            const { documentID } = row;\n\n            return (\n              <TableRow\n                key={pos}\n                onClick={() => history.push(`/order/${documentID}`)}\n              >\n\n                {columns.map((column, pos) => {\n                  const columnName = column.id;\n                  const columnValue = row[columnName];\n                  const formattedText = formatText(columnName, columnValue);\n\n                  return (\n                    <TableCell\n                      key={pos}\n                      style={styles}\n                    >\n                      {formattedText}\n                    </TableCell>\n                  )\n                })}\n\n              </TableRow>\n            )\n          })}\n\n        </TableBody>\n\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default OrderHistory;\n"]},"metadata":{},"sourceType":"module"}