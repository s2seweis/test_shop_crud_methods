{"ast":null,"code":"var _jsxFileName = \"/Users/SWT/Desktop/test_shop_crud_copy/src/pages/Categories/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductStart, fetchProductsStart, deleteProductStart } from './../../redux/Products/products.actions';\nimport { addCategoryStart, fetchCategoriesStart, deleteCategoryStart } from './../../redux/Categories/categories.actions';\nimport Modal from './../../components/Modal';\nimport FormInput from './../../components/forms/FormInput';\nimport FormSelect from './../../components/forms/FormSelect';\nimport Button from './../../components/forms/Button';\nimport LoadMore from './../../components/LoadMore';\nimport CKEditor from 'ckeditor4-react';\nimport './styles.scss';\n\nconst mapState = _ref => {\n  let {\n    productsData\n  } = _ref;\n  return {\n    products: productsData.products\n  };\n};\n\nconst Categories = props => {\n  const {\n    categories\n  } = useSelector(mapState);\n  const dispatch = useDispatch();\n  const [hideModal, setHideModal] = useState(true);\n  const [productCategory, setProductCategory] = useState('mens');\n  const [productName, setProductName] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [productThumbnail, setProductThumbnail] = useState('');\n  const [productPrice, setProductPrice] = useState(0);\n  const [productDesc, setProductDesc] = useState('');\n  const {\n    data,\n    queryDoc,\n    isLastPage\n  } = categories;\n  useEffect(() => {\n    dispatch(fetchProductsStart(), fetchCategoriesStart());\n  }, []);\n\n  const toggleModal = () => setHideModal(!hideModal);\n\n  const configModal = {\n    hideModal,\n    toggleModal\n  };\n\n  const resetForm = () => {\n    setHideModal(true);\n    setProductCategory('mens');\n    setProductName('');\n    setCategoryName('');\n    setProductThumbnail('');\n    setProductPrice(0);\n    setProductDesc('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch( // addProductStart({\n    addCategoryStart({\n      productCategory,\n      productName,\n      categoryName,\n      productThumbnail,\n      productPrice,\n      productDesc\n    }));\n    resetForm();\n  };\n\n  const handleLoadMore = () => {\n    dispatch( // fetchProductsStart({\n    fetchCategoriesStart({\n      startAfterDoc: queryDoc,\n      persistProducts: data\n    }));\n  };\n\n  const configLoadMore = {\n    onLoadMoreEvt: handleLoadMore\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"callToActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Add new category\")))), /*#__PURE__*/React.createElement(Modal, Object.assign({}, configModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addNewProductForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Add new category\"), /*#__PURE__*/React.createElement(FormInput // label=\"Name\"\n  , {\n    label: \"Category\",\n    type: \"text\" // value={productName}\n    ,\n    value: categoryName // handleChange={e => setProductName(e.target.value)}\n    ,\n    handleChange: e => setCategoryName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Add category\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manageProducts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    border: \"0\",\n    cellPadding: \"0\",\n    cellSpacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Add/ Delete/ Upate Categories\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Categories;","map":{"version":3,"sources":["/Users/SWT/Desktop/test_shop_crud_copy/src/pages/Categories/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","addProductStart","fetchProductsStart","deleteProductStart","addCategoryStart","fetchCategoriesStart","deleteCategoryStart","Modal","FormInput","FormSelect","Button","LoadMore","CKEditor","mapState","productsData","products","Categories","props","categories","dispatch","hideModal","setHideModal","productCategory","setProductCategory","productName","setProductName","categoryName","setCategoryName","productThumbnail","setProductThumbnail","productPrice","setProductPrice","productDesc","setProductDesc","data","queryDoc","isLastPage","toggleModal","configModal","resetForm","handleSubmit","e","preventDefault","handleLoadMore","startAfterDoc","persistProducts","configLoadMore","onLoadMoreEvt","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductStart, fetchProductsStart, deleteProductStart } from './../../redux/Products/products.actions';\n\nimport { addCategoryStart, fetchCategoriesStart, deleteCategoryStart } from './../../redux/Categories/categories.actions';\n\nimport Modal from './../../components/Modal';\nimport FormInput from './../../components/forms/FormInput';\nimport FormSelect from './../../components/forms/FormSelect';\nimport Button from './../../components/forms/Button';\nimport LoadMore from './../../components/LoadMore';\nimport CKEditor from 'ckeditor4-react';\nimport './styles.scss';\n\nconst mapState = ({ productsData }) => ({\n  products: productsData.products\n});\n\nconst Categories = props => {\n  const { categories } = useSelector(mapState);\n  const dispatch = useDispatch();\n  const [hideModal, setHideModal] = useState(true);\n  const [productCategory, setProductCategory] = useState('mens');\n  const [productName, setProductName] = useState('');\n\n  const [categoryName, setCategoryName] = useState('');\n\n\n  const [productThumbnail, setProductThumbnail] = useState('');\n  const [productPrice, setProductPrice] = useState(0);\n  const [productDesc, setProductDesc] = useState('');\n\n  const { data, queryDoc, isLastPage } = categories;\n\n  useEffect(() => {\n    dispatch(\n      fetchProductsStart(),\n      fetchCategoriesStart()\n    );\n  }, []);\n\n  const toggleModal = () => setHideModal(!hideModal);\n\n  const configModal = {\n    hideModal,\n    toggleModal\n  };\n\n  const resetForm = () => {\n    setHideModal(true);\n    setProductCategory('mens');\n    setProductName('');\n    setCategoryName('');\n    setProductThumbnail('');\n    setProductPrice(0);\n    setProductDesc('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      // addProductStart({\n        addCategoryStart({\n        productCategory,\n        productName,\n        categoryName,\n        productThumbnail,\n        productPrice,\n        productDesc,\n      })\n    );\n    resetForm();\n\n  };\n\n  const handleLoadMore = () => {\n    dispatch(\n      // fetchProductsStart({\n        fetchCategoriesStart({\n        startAfterDoc: queryDoc,\n        persistProducts: data\n      })\n    );\n  };\n\n  const configLoadMore = {\n    onLoadMoreEvt: handleLoadMore,\n  };\n\n  return (\n    <div className=\"categories\">\n\n      <div className=\"callToActions\">\n        <ul>\n          <li>\n            <Button onClick={() => toggleModal()}>\n              Add new category\n            </Button>\n          </li>\n        </ul>\n      </div>\n\n      <Modal {...configModal}>\n        <div className=\"addNewProductForm\">\n          <form onSubmit={handleSubmit}>\n\n            <h2>\n              Add new category\n            </h2>\n\n            {/* <FormSelect\n              label=\"Category\"\n              options={[{\n                value: \"mens\",\n                name: \"Mens\"\n              }, {\n                value: \"womens\",\n                name: \"Womens\"\n              }]}\n              handleChange={e => setProductCategory(e.target.value)}\n            /> */}\n\n            <FormInput\n              // label=\"Name\"\n              label=\"Category\"\n              type=\"text\"\n              // value={productName}\n              value={categoryName}\n              // handleChange={e => setProductName(e.target.value)}\n              handleChange={e => setCategoryName(e.target.value)}\n            />\n\n            {/* <FormInput\n              label=\"NewCategory\"\n              type=\"text\"\n              value={newCategory}\n              handleChange={e => setNewCategory(e.target.value)}\n            /> */}\n\n            {/* <FormInput\n              label=\"Main image URL\"\n              type=\"url\"\n              value={productThumbnail}\n              handleChange={e => setProductThumbnail(e.target.value)}\n            />\n\n            <FormInput\n              label=\"Price\"\n              type=\"number\"\n              min=\"0.00\"\n              max=\"10000.00\"\n              step=\"0.01\"\n              value={productPrice}\n              handleChange={e => setProductPrice(e.target.value)}\n            /> */}\n\n            {/* <CKEditor\n              onChange={evt => setProductDesc(evt.editor.getData())}\n            /> */}\n\n            <br />\n\n            <Button type=\"submit\">\n              Add category\n            </Button>\n\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"manageProducts\">\n\n        <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\n          <tbody>\n            <tr>\n              <th>\n                <h1>\n                  Add/ Delete/ Upate Categories \n                </h1>\n              </th>\n            </tr>\n            <tr>\n              <td>\n                {/* <table className=\"results\" border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\n                  <tbody>\n                    {(Array.isArray(data) && data.length > 0) && data.map((product, index) => {\n                      const {\n                        productName,\n                        productThumbnail,\n                        productPrice,\n                        documentID\n                      } = product;\n\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <img className=\"thumb\" src={productThumbnail} />\n                          </td>\n                          <td>\n                            {productName}\n                          </td>\n                          <td>\n                            £{productPrice}\n                          </td>\n                          \n                          <td>\n                            <Button onClick={() => dispatch(deleteProductStart(documentID))}>\n                            <Button onClick={() => dispatch(deleteCategoryStart(documentID))}>\n                              Delete\n                            </Button>\n                          </td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table> */}\n              </td>\n            </tr>\n            <tr>\n              <td>\n\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {/* <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\n                  <tbody>\n                    <tr>\n                      <td>\n                        {!isLastPage && (\n                          <LoadMore {...configLoadMore} />\n                          <LoadMore {...configLoadMore} />\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table> */}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}