{"ast":null,"code":"var _jsxFileName = \"/Users/SWT/Desktop/test_shop_crud_copy/src/components/EmailPassword/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { resetPasswordStart, resetUserState } from './../../redux/User/user.actions';\nimport './styles.scss';\nimport AuthWrapper from './../AuthWrapper';\nimport FormInput from './../forms/FormInput';\nimport Button from './../forms/Button';\n\nconst mapState = _ref => {\n  let {\n    user\n  } = _ref;\n  return {\n    resetPasswordSuccess: user.resetPasswordSuccess,\n    userErr: user.userErr\n  };\n};\n\nconst EmailPassword = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    resetPasswordSuccess,\n    userErr\n  } = useSelector(mapState);\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    if (resetPasswordSuccess) {\n      dispatch(resetUserState());\n      history.push('/login');\n    }\n  }, [resetPasswordSuccess]);\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(resetPasswordStart({\n      email\n    }));\n  };\n\n  const configAuthWrapper = {\n    headline: 'Email Password'\n  };\n  return /*#__PURE__*/React.createElement(AuthWrapper, Object.assign({}, configAuthWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, errors.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, errors.map((e, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, e);\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    handleChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Email Password\"))));\n};\n\nexport default EmailPassword;","map":{"version":3,"sources":["/Users/SWT/Desktop/test_shop_crud_copy/src/components/EmailPassword/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","resetPasswordStart","resetUserState","AuthWrapper","FormInput","Button","mapState","user","resetPasswordSuccess","userErr","EmailPassword","props","dispatch","history","email","setEmail","errors","setErrors","push","Array","isArray","length","handleSubmit","e","preventDefault","configAuthWrapper","headline","map","index","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,iCAAnD;AACA,OAAO,eAAP;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAe;AAC9BC,IAAAA,oBAAoB,EAAED,IAAI,CAACC,oBADG;AAE9BC,IAAAA,OAAO,EAAEF,IAAI,CAACE;AAFgB,GAAf;AAAA,CAAjB;;AAKA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAoCV,WAAW,CAACO,QAAD,CAArD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,oBAAJ,EAA0B;AACxBI,MAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;AACAW,MAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACD;AAEF,GANQ,EAMN,CAACV,oBAAD,CANM,CAAT;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,KAAK,CAACC,OAAN,CAAcX,OAAd,KAA0BA,OAAO,CAACY,MAAR,GAAiB,CAA/C,EAAkD;AAChDJ,MAAAA,SAAS,CAACR,OAAD,CAAT;AACD;AAEF,GALQ,EAKN,CAACA,OAAD,CALM,CAAT;;AAOA,QAAMa,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,QAAQ,CAACX,kBAAkB,CAAC;AAAEa,MAAAA;AAAF,KAAD,CAAnB,CAAR;AACD,GAHD;;AAKA,QAAMW,iBAAiB,GAAG;AACxBC,IAAAA,QAAQ,EAAE;AADc,GAA1B;AAIA,sBACE,oBAAC,WAAD,oBAAiBD,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGT,MAAM,CAACK,MAAP,GAAgB,CAAhB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACW,GAAP,CAAW,CAACJ,CAAD,EAAIK,KAAJ,KAAc;AACxB,wBACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,CADH,CADF;AAKD,GANA,CADH,CAHJ,eAcE;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAER,KAHT;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,YAAY,EAAES,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACM,MAAF,CAASC,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,CAdF,CADF,CADF;AAmCD,CAlED;;AAoEA,eAAepB,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { resetPasswordStart, resetUserState } from './../../redux/User/user.actions';\nimport './styles.scss';\n\nimport AuthWrapper from './../AuthWrapper';\nimport FormInput from './../forms/FormInput';\nimport Button from './../forms/Button';\n\nconst mapState = ({ user }) => ({\n  resetPasswordSuccess: user.resetPasswordSuccess,\n  userErr: user.userErr\n});\n\nconst EmailPassword = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { resetPasswordSuccess, userErr } = useSelector(mapState);\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (resetPasswordSuccess) {\n      dispatch(resetUserState());\n      history.push('/login');\n    }\n\n  }, [resetPasswordSuccess]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n\n  }, [userErr]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(resetPasswordStart({ email }));\n  }\n\n  const configAuthWrapper = {\n    headline: 'Email Password'\n  };\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <div className=\"formWrap\">\n\n        {errors.length > 0 && (\n          <ul>\n            {errors.map((e, index) => {\n              return (\n                <li key={index}>\n                  {e}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n\n        <form onSubmit={handleSubmit}>\n\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            handleChange={e => setEmail(e.target.value)}\n          />\n\n          <Button type=\"submit\">\n            Email Password\n          </Button>\n\n        </form>\n\n      </div>\n    </AuthWrapper>\n  );\n}\n\nexport default EmailPassword;\n"]},"metadata":{},"sourceType":"module"}