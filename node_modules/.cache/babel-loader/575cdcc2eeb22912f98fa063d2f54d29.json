{"ast":null,"code":"var _jsxFileName = \"/Users/SWT/Desktop/test_shop_crud_copy/test_shop_crud_methods/src/pages/Categories/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductStart, fetchProductsStart, deleteProductStart } from './../../redux/Products/products.actions';\nimport { addCategoryStart, fetchCategoriesStart, deleteCategoryStart } from './../../redux/Categories/categories.actions';\nimport Modal from './../../components/Modal';\nimport ModalUpdate from './../../components/ModalUpdate';\nimport FormInput from './../../components/forms/FormInput';\nimport FormSelect from './../../components/forms/FormSelect';\nimport Button from './../../components/forms/Button'; // import LoadMore from './../../components/LoadMore';\n\nimport CKEditor from 'ckeditor4-react';\nimport './styles.scss';\n\nconst mapState = _ref => {\n  let {\n    categoriesData\n  } = _ref;\n  return {\n    categories: categoriesData.categories\n  };\n};\n\nconst Categories = props => {\n  const {\n    categories\n  } = useSelector(mapState);\n  const dispatch = useDispatch();\n  const [hideModal, setHideModal] = useState(true);\n  const [hideModalUpdate, setHideModalUpdate] = useState(true);\n  const [newCategory, setNewCategory] = useState('mens');\n  const [categoryName, setCategoryName] = useState(''); // const [productName, setProductName] = useState('');\n  // const [productThumbnail, setProductThumbnail] = useState('');\n  // const [productPrice, setProductPrice] = useState(0);\n  // const [productDesc, setProductDesc] = useState('');\n\n  const {\n    data,\n    queryDoc,\n    isLastPage\n  } = categories;\n  useEffect(() => {\n    dispatch(fetchCategoriesStart() //   fetchCategoriesStart()\n    );\n  }, []);\n\n  const toggleModal = () => setHideModal(!hideModal);\n\n  const toggleModalUpdate = () => setHideModalUpdate(!hideModalUpdate);\n\n  const configModal = {\n    hideModal,\n    toggleModal\n  };\n  const configModalUpdate = {\n    hideModalUpdate,\n    toggleModalUpdate\n  };\n\n  const resetForm = () => {\n    setHideModal(true);\n    setHideModalUpdate(true); // setProductCategory('mens');\n\n    setCategoryName('');\n    setNewCategory(''); // setProductThumbnail('');\n    // setProductPrice(0);\n    // setProductDesc('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addCategoryStart({\n      // addCategoryStart({\n      // productCategory,\n      categoryName,\n      newCategory // productThumbnail,\n      // productPrice,\n      // productDesc,\n\n    }));\n    resetForm();\n  };\n\n  const resetFormUpdate = () => {\n    setHideModalUpdate(true); // setProductCategory('mens');\n\n    setCategoryName('');\n    setNewCategory(''); // setProductThumbnail('');\n    // setProductPrice(0);\n    // setProductDesc('');\n  };\n\n  const handleSubmitUpdate = e => {\n    e.preventDefault();\n    dispatch(addCategoryStart({\n      // addCategoryStart({\n      // productCategory,\n      categoryName,\n      newCategory // productThumbnail,\n      // productPrice,\n      // productDesc,\n\n    }));\n    resetFormUpdate();\n  };\n\n  const handleLoadMore = () => {\n    dispatch(fetchCategoriesStart({\n      // fetchCategoriesStart({\n      startAfterDoc: queryDoc,\n      persistCategories: data\n    }));\n  };\n\n  const configLoadMore = {\n    onLoadMoreEvt: handleLoadMore\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"callToActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Add new category\")))), /*#__PURE__*/React.createElement(Modal, Object.assign({}, configModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addNewCategoryForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"Name\",\n    type: \"text\",\n    value: categoryName,\n    handleChange: e => setCategoryName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Add category\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"callToActionsUpdate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModalUpdate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Update\")))), /*#__PURE__*/React.createElement(ModalUpdate, Object.assign({}, configModalUpdate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addUpdateForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmitUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Update Category Method\"), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"Update\",\n    type: \"text\",\n    value: categoryName,\n    handleChange: e => setCategoryName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, \"Update Category\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manageProducts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    border: \"0\",\n    cellPadding: \"0\",\n    cellSpacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, \"Add/ Delete/ Upate Categories\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"results\",\n    border: \"0\",\n    cellPadding: \"10\",\n    cellSpacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }, Array.isArray(data) && data.length > 0 && data.map((category, index) => {\n    const {\n      categoryName,\n      // productThumbnail,\n      // productPrice,\n      documentID\n    } = category;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 27\n      }\n    }, categoryName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => dispatch(deleteCategoryStart(documentID)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, \"Delete\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => toggleModalUpdate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, \"Update\")));\n  }))))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Categories;","map":{"version":3,"sources":["/Users/SWT/Desktop/test_shop_crud_copy/test_shop_crud_methods/src/pages/Categories/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","addProductStart","fetchProductsStart","deleteProductStart","addCategoryStart","fetchCategoriesStart","deleteCategoryStart","Modal","ModalUpdate","FormInput","FormSelect","Button","CKEditor","mapState","categoriesData","categories","Categories","props","dispatch","hideModal","setHideModal","hideModalUpdate","setHideModalUpdate","newCategory","setNewCategory","categoryName","setCategoryName","data","queryDoc","isLastPage","toggleModal","toggleModalUpdate","configModal","configModalUpdate","resetForm","handleSubmit","e","preventDefault","resetFormUpdate","handleSubmitUpdate","handleLoadMore","startAfterDoc","persistCategories","configLoadMore","onLoadMoreEvt","target","value","Array","isArray","length","map","category","index","documentID"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductStart, fetchProductsStart, deleteProductStart } from './../../redux/Products/products.actions';\n\nimport { addCategoryStart, fetchCategoriesStart, deleteCategoryStart } from './../../redux/Categories/categories.actions';\n\nimport Modal from './../../components/Modal';\nimport ModalUpdate from './../../components/ModalUpdate';\nimport FormInput from './../../components/forms/FormInput';\nimport FormSelect from './../../components/forms/FormSelect';\nimport Button from './../../components/forms/Button';\n// import LoadMore from './../../components/LoadMore';\nimport CKEditor from 'ckeditor4-react';\nimport './styles.scss';\n\nconst mapState = ({ categoriesData }) => ({\n  categories: categoriesData.categories\n});\n\nconst Categories = props => {\n  const { categories } = useSelector(mapState);\n  const dispatch = useDispatch();\n  const [hideModal, setHideModal] = useState(true);\n  const [hideModalUpdate, setHideModalUpdate] = useState(true);\n  const [newCategory, setNewCategory] = useState('mens');\n  const [categoryName, setCategoryName] = useState('');\n  // const [productName, setProductName] = useState('');\n\n\n\n\n  // const [productThumbnail, setProductThumbnail] = useState('');\n  // const [productPrice, setProductPrice] = useState(0);\n  // const [productDesc, setProductDesc] = useState('');\n\n  const { data, queryDoc, isLastPage } = categories;\n\n  useEffect(() => {\n    dispatch(\n      fetchCategoriesStart()\n      //   fetchCategoriesStart()\n    );\n  }, []);\n\n  const toggleModal = () => setHideModal(!hideModal);\n  const toggleModalUpdate = () => setHideModalUpdate(!hideModalUpdate);\n\n  const configModal = {\n    hideModal,\n    toggleModal\n  };\n  const configModalUpdate = {\n    hideModalUpdate,\n    toggleModalUpdate\n  };\n\n  const resetForm = () => {\n    setHideModal(true);\n    setHideModalUpdate(true);\n    // setProductCategory('mens');\n    setCategoryName('');\n    setNewCategory('');\n    // setProductThumbnail('');\n    // setProductPrice(0);\n    // setProductDesc('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      addCategoryStart({\n        // addCategoryStart({\n        // productCategory,\n        categoryName,\n        newCategory,\n        // productThumbnail,\n        // productPrice,\n        // productDesc,\n      })\n    );\n    resetForm();\n\n  };\n\n  const resetFormUpdate = () => {\n    setHideModalUpdate(true);\n    // setProductCategory('mens');\n    setCategoryName('');\n    setNewCategory('');\n    // setProductThumbnail('');\n    // setProductPrice(0);\n    // setProductDesc('');\n  };\n\n  const handleSubmitUpdate = e => {\n    e.preventDefault();\n\n    dispatch(\n      addCategoryStart({\n        // addCategoryStart({\n        // productCategory,\n        categoryName,\n        newCategory,\n        // productThumbnail,\n        // productPrice,\n        // productDesc,\n      })\n    );\n    resetFormUpdate();\n\n  };\n\n  const handleLoadMore = () => {\n    dispatch(\n      fetchCategoriesStart({\n        // fetchCategoriesStart({\n        startAfterDoc: queryDoc,\n        persistCategories: data\n      })\n    );\n  };\n\n  const configLoadMore = {\n    onLoadMoreEvt: handleLoadMore,\n  };\n\n  return (\n    <div className=\"categories\">\n\n      <div className=\"callToActions\">\n        <ul>\n          <li>\n            <Button onClick={() => toggleModal()}>\n              Add new category\n            </Button>\n          </li>\n        </ul>\n      </div>\n\n      <Modal {...configModal}>\n        <div className=\"addNewCategoryForm\">\n          <form onSubmit={handleSubmit}>\n\n            <h2>\n              Category\n            </h2>\n\n            {/* <FormSelect\n              label=\"Category\"\n              options={[{\n                value: \"mens\",\n                name: \"Mens\"\n              }, {\n                value: \"womens\",\n                name: \"Womens\"\n              }]}\n              handleChange={e => setProductCategory(e.target.value)}\n            /> */}\n\n            <FormInput\n              label=\"Name\"\n              type=\"text\"\n              value={categoryName}\n              handleChange={e => setCategoryName(e.target.value)}\n            />\n\n            {/* <FormInput\n              label=\"NewCategory\"\n              type=\"text\"\n              value={newCategory}\n              handleChange={e => setNewCategory(e.target.value)}\n            /> */}\n\n            {/* <FormInput\n              label=\"Main image URL\"\n              type=\"url\"\n              value={productThumbnail}\n              handleChange={e => setProductThumbnail(e.target.value)}\n            />\n            <FormInput\n              label=\"Price\"\n              type=\"number\"\n              min=\"0.00\"\n              max=\"10000.00\"\n              step=\"0.01\"\n              value={productPrice}\n              handleChange={e => setProductPrice(e.target.value)}\n            /> */}\n\n            {/* <CKEditor\n              onChange={evt => setProductDesc(evt.editor.getData())}\n            /> */}\n\n            <br />\n\n            <Button type=\"submit\">\n              Add category\n            </Button>\n\n          </form>\n        </div>\n      </Modal>\n\n\n      <div className=\"callToActionsUpdate\">\n        <ul>\n          <li>\n            <Button onClick={() => toggleModalUpdate()}>\n              Update\n            </Button>\n          </li>\n        </ul>\n      </div>\n\n      <ModalUpdate {...configModalUpdate}>\n        <div className=\"addUpdateForm\">\n          <form onSubmit={handleSubmitUpdate}>\n\n            <h2>\n              Update Category Method\n            </h2>\n\n            {/* <FormSelect\n              label=\"Category\"\n              options={[{\n                value: \"mens\",\n                name: \"Mens\"\n              }, {\n                value: \"womens\",\n                name: \"Womens\"\n              }]}\n              handleChange={e => setProductCategory(e.target.value)}\n            /> */}\n\n            <FormInput\n              label=\"Update\"\n              type=\"text\"\n              value={categoryName}\n              handleChange={e => setCategoryName(e.target.value)}\n            />\n\n            {/* <FormInput\n              label=\"NewCategory\"\n              type=\"text\"\n              value={newCategory}\n              handleChange={e => setNewCategory(e.target.value)}\n            /> */}\n\n            {/* <FormInput\n              label=\"Main image URL\"\n              type=\"url\"\n              value={productThumbnail}\n              handleChange={e => setProductThumbnail(e.target.value)}\n            />\n            <FormInput\n              label=\"Price\"\n              type=\"number\"\n              min=\"0.00\"\n              max=\"10000.00\"\n              step=\"0.01\"\n              value={productPrice}\n              handleChange={e => setProductPrice(e.target.value)}\n            /> */}\n\n            {/* <CKEditor\n              onChange={evt => setProductDesc(evt.editor.getData())}\n            /> */}\n\n            <br />\n\n            <Button type=\"submit\">\n              Update Category\n            </Button>\n\n          </form>\n        </div>\n      </ModalUpdate>\n\n      <div className=\"manageProducts\">\n\n        <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\n          <tbody>\n            <tr>\n              <th>\n                <h1>\n                  Add/ Delete/ Upate Categories\n                </h1>\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <table className=\"results\" border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\n                  <tbody>\n                    {(Array.isArray(data) && data.length > 0) && data.map((category, index) => {\n                      const {\n                        categoryName,\n                        // productThumbnail,\n                        // productPrice,\n                        documentID\n                      } = category;\n\n                      return (\n                        <tr key={index}>\n                          {/* <td>\n                            <img className=\"thumb\" src={productThumbnail} />\n                          </td> */}\n                          <td>\n                            {categoryName}\n                          </td>\n                          {/* <td>\n                            £{productPrice}\n                          </td> */}\n\n                          <td>\n                            <Button onClick={() => dispatch(deleteCategoryStart(documentID))}>\n                              Delete\n                            </Button>\n                          </td>\n                          {/* <td>\n                            <Button onClick={() => dispatch(deleteCategoryStart(documentID))}>\n                              Update\n                            </Button>\n                          </td> */}\n                          <td>\n                            <Button onClick={() => toggleModalUpdate()}>\n                              Update\n                            </Button>\n                          </td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {/* <table border=\"0\" cellPadding=\"10\" cellSpacing=\"0\">\n                  <tbody>\n                    <tr>\n                      <td>\n                        {!isLastPage && (\n                          <LoadMore {...configLoadMore} />\n                          <LoadMore {...configLoadMore} />\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table> */}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}